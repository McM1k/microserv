swagger: "2.0"
info:
  description: "cat and owners"
  version: "1.0.0"
  title: "cat api"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v2"
tags:
  - name: "cat"
    description: "Operations about cat"
  - name: "owner"
    description: "Operations about owners"
  - name: "races"
    description: "Operations about races"
schemes:
  - "https"
  - "http"
paths:
  /cat:
    get:
      tags:
        - "cat"
      summary: "Display all cats"
      description: "displays all the cats"
      operationId: "getCats"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "owner"
          in: "query"
          description: "name of owner"
          type: "string"
          required: false
          format: "string"
        - name: "race"
          in: "query"
          description: "name of race"
          type: "string"
          required: false
          format: "string"
      responses:
        "200":
          description: "successful operation"
        "404":
          description: "cat not found"
    post:
      tags:
        - "cat"
      summary: "Add a new cat"
      description: ""
      operationId: "addCat"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Cat object that need to be added"
          required: true
          schema:
            $ref: "#/definitions/Cat"
      responses:
        "405":
          description: "Invalid input"
  /cat/{catId}:
    get:
      tags:
        - "cat"
      summary: "Display one cat"
      description: "Returns a single cat"
      operationId: "getCatById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "catId"
          in: "path"
          description: "ID of cat to return"
          type: "integer"
          required: true
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Cat"
        "404":
          description: "cat not found"
    post:
      tags:
        - "cat"
      summary: "Updates a cat"
      description: ""
      operationId: "updateCat"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "catId"
          in: "path"
          description: "ID of cat that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Cat object that need to be updated"
          required: true
          schema:
            $ref: "#/definitions/Cat"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
        - "cat"
      summary: "Deletes a cat"
      description: ""
      operationId: "deleteCat"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          required: false
          type: "string"
        - name: "catId"
          in: "path"
          description: "cat id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "404":
          description: "cat not found"
  /owner:
    get:
      tags:
        - "owner"
      summary: "Display all owners"
      description: ""
      operationId: "getOwners"
      produces:
        - "application/xml"
        - "application/json"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "cat not found"
    post:
      tags:
        - "owner"
      summary: "Create Owner"
      description: ""
      operationId: "createOwner"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created owner object"
          required: true
          schema:
            $ref: "#/definitions/Owner"
      responses:
        default:
          description: "successful operation"
  /owner/{ownerId}:
    get:
      tags:
        - "owner"
      summary: "Display one owner"
      description: "Returns a single owner"
      operationId: "getOwnerById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "ownerId"
          in: "path"
          description: "ID of owner to return"
          type: "integer"
          required: true
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Owner"
        "404":
          description: "owner not found"
    post:
      tags:
        - "owner"
      summary: "Updates a owner"
      description: ""
      operationId: "updateOwner"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "ownerId"
          in: "path"
          description: "ID of owner that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          description: "Owner object that need to be updated"
          required: true
          schema:
            $ref: "#/definitions/Owner"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
        - "owner"
      summary: "Deletes a owner"
      description: ""
      operationId: "deleteOwner"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          required: false
          type: "string"
        - name: "ownerId"
          in: "path"
          description: "owner id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "404":
          description: "owner not found"

  /races:
    get:
      tags:
        - "races"
      summary: "Display all races"
      description: ""
      operationId: "getRaces"
      produces:
        - "application/xml"
        - "application/json"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "cat not found"
    post:
      tags:
        - "races"
      summary: "Create Race"
      description: ""
      operationId: "createRace"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created race object"
          required: true
          schema:
            $ref: "#/definitions/Race"
      responses:
        default:
          description: "successful operation"
  /races/{raceId}:
    get:
      tags:
        - "races"
      summary: "Display one race"
      description: "Returns a single race"
      operationId: "getRaceById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "raceId"
          in: "path"
          description: "ID of race to return"
          type: "integer"
          required: true
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Race"
        "404":
          description: "race not found"
    post:
      tags:
        - "races"
      summary: "Updates a race"
      description: ""
      operationId: "updateRace"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "raceId"
          in: "path"
          description: "ID of race that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Race object that need to be updated"
          required: true
          schema:
            $ref: "#/definitions/Race"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
        - "races"
      summary: "Deletes a race"
      description: ""
      operationId: "deleteRace"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          required: false
          type: "string"
        - name: "raceId"
          in: "path"
          description: "race id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "404":
          description: "race not found"

definitions:
  Owner:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"

    xml:
      name: "Owner"
  Race:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"

    xml:
      name: "Race"
  Cat:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "example_cat"
      race:
        type: "integer"
        format: "int64"
      color:
        type: "string"
        enum:
          - "white"
          - "black"
          - "orange"
    xml:
      name: "cat"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"